application.args=
build.classes.dir=${build.dir}/classes
build.classes.excludes=**/*.java,**/*.form
# This directory is removed when the project is cleaned:
build.dir=build
build.generated.dir=${build.dir}/generated
build.generated.sources.dir=${build.dir}/generated-sources
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
debug.classpath=\
    ${run.classpath}
debug.test.classpath=\
    ${run.test.classpath}
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=${dist.dir}/HMMExplorer.jar
dist.javadoc.dir=${dist.dir}/javadoc
excludes=
file.reference.concurrent.jar=../colt/lib/concurrent.jar
file.reference.jahmm-0.6.1.jar=../jahmm-0.6.1/lib/jahmm-0.6.1.jar
file.reference.xercesImpl.jar=../xerces-2_9_0/xercesImpl.jar
file.reference.xercesSamples.jar=../xerces-2_9_0/xercesSamples.jar
file.reference.xml-apis.jar=../xerces-2_9_0/xml-apis.jar
includes=**
jar.compress=false
javac.classpath=\
    ${file.reference.jung-1.7.6.jar-1}:\
    ${file.reference.commons-collections-3.2.jar}:\
    ${file.reference.colt.jar}
# Space-separated list of extra javac options
javac.compilerargs=
javac.deprecation=true
javac.source=1.6
javac.target=1.6
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}:\
    ${libs.junit.classpath}
javadoc.additionalparam=
javadoc.author=false
javadoc.encoding=
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=true
javadoc.splitindex=true
javadoc.use=true
javadoc.version=false
javadoc.windowtitle=
main.class=HMMExplorer.HMMExplorer
manifest.file=manifest.mf
meta.inf.dir=${src.dir}/META-INF
platform.active=default_platform
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
# Space-separated list of JVM arguments used when running the project
# (you may also define separate properties like run-sys-prop.name=value instead of -Dname=value
# or test-sys-prop.name=value to set system properties for unit tests):
run.jvmargs=
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
src.dir=src
test.src.dir=test
